version: 1.0.{build}
image: Visual Studio 2019
configuration:
- Debug
- Release
platform: x64
init:
- ps: >-
    if ($env:APPVEYOR_REPO_TAG -eq "true")

    {
       $env:ENGINE_VERSION = "$($env:APPVEYOR_REPO_TAG_NAME.TrimStart("v"))"
    }

    else

    {
       $env:ENGINE_VERSION = "dev-$($env:APPVEYOR_REPO_COMMIT.Substring(0, 7))"
    }
install:
- ps: >-
    $assetDirName = "ExampleGame"

    $fileName = "c:\projects\spire-engine\ExampleGame.zip"

    Add-Type -assembly "system.io.compression.filesystem"


    if (-NOT ((Test-Path $assetDirName)))

    {
        "ExampleGame directory not found, downloading..."
        appveyor DownloadFile "https://github.com/spire-engine/spire-engine/releases/download/v0.21/ExampleGame.zip"
        # Unzip.
        Expand-Archive -Path $fileName -DestinationPath '.\'

        # Delete downloaded zip file.
        Remove-Item $fileName

        "$assetDirName downloaded and updated."
    }

build:
  project: c:\projects\spire-engine\GameEngine.sln
  parallel: true
  verbosity: minimal
after_build:
- ps: >-
    if ($env:PLATFORM -eq "x64")

    {
      $env:ENGINE_DEPLOY_PLATFORM = "win64"
    }

    else

    {
      $env:ENGINE_DEPLOY_PLATFORM = "win32"
    }

    $env:ENGINE_BINARY_ARCHIVE = "spire-engine-$($env:ENGINE_VERSION)-$($env:ENGINE_DEPLOY_PLATFORM).zip"


    7z a "$env:ENGINE_BINARY_ARCHIVE" LICENSE

    7z a "$env:ENGINE_BINARY_ARCHIVE" .\$($env:PLATFORM)\$($env:CONFIGURATION)\GameEngine.exe

    7z a "$env:ENGINE_BINARY_ARCHIVE" .\$($env:PLATFORM)\$($env:CONFIGURATION)\slang.dll

    7z a "$env:ENGINE_BINARY_ARCHIVE" .\$($env:PLATFORM)\$($env:CONFIGURATION)\slang-glslang.dll

    7z a "$env:ENGINE_BINARY_ARCHIVE" .\$($env:PLATFORM)\$($env:CONFIGURATION)\libfbxsdk.dll

    7z a "$env:ENGINE_BINARY_ARCHIVE" .\$($env:PLATFORM)\$($env:CONFIGURATION)\SkeletonRetargetTool.exe

    7z a "$env:ENGINE_BINARY_ARCHIVE" .\$($env:PLATFORM)\$($env:CONFIGURATION)\ModelImporter.exe

    7z a "$env:ENGINE_BINARY_ARCHIVE" .\EngineContent\*

    7z a "$env:ENGINE_BINARY_ARCHIVE" .\ExampleGame\

    Set-Content -Path "RunGame.bat" -Value "GameEngine.exe -dir ExampleGame" -Encoding ASCII

    7z a "$env:ENGINE_BINARY_ARCHIVE" .\RunGame.bat

test_script:
- ps: >-
    Start-Process -FilePath ".\$($env:PLATFORM)\$($env:CONFIGURATION)\GameEngine.exe" -ArgumentList @("-enginedir", "EngineContent", "-dir", "ExampleGame", "-no_renderer", "-headless", "-runforframes", "3") -Wait

    $Matches = Select-String -Path "rendercommands.txt" -Pattern "Present" -AllMatches

    if ($Matches.Matches.Count -eq 3)

    {
      Remove-Item rendercommands.txt
      appveyor AddTest "Smoke" -FileName "Smoke" -Framework "SpireEngineTest" -Outcome "Passed"
    }

    else

    {
      "failed test 'Integration Test'"
      appveyor AddTest "Smoke" -FileName "Smoke" -Framework "SpireEngineTest" -Outcome "Failed"
    }
artifacts:
- path: $(ENGINE_BINARY_ARCHIVE)
  name: binary_archive
deploy:
- provider: GitHub
  release: v$(ENGINE_VERSION)
  description: SpireEngine $(ENGINE_VERSION)
  auth_token:
    secure: 5cgZoiqPZrf9RWtzAEwGBMdIh5Enz2qnwQ5OjC1lQE1ZhA3SZRwt5T6u+eJKlV0a
  artifact: binary_archive
  prerelease: false
  draft: false
  force_update: true
  on:
    configuration: Release
    appveyor_repo_tag: true        # deploy on tag push only